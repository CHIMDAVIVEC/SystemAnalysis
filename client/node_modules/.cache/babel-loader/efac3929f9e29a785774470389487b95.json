{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\components\\\\panel\\\\Dashboard\\\\Dashboard.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport { UserContext } from '../../../context/user/userContext';\nimport { ProblemContext } from '../../../context/problem/problemContext';\nimport { Typography } from 'antd';\nimport UserStats from './Stats/UserStats';\nimport ProblemStats from './Stats/ProblemStats';\nimport HOC from '../HOC';\nconst {\n  Title\n} = Typography;\nconst index = '1';\n\nfunction Dashboard() {\n  const {\n    state\n  } = useContext(UserContext);\n  const {\n    problems\n  } = useContext(ProblemContext).state;\n  const {\n    users,\n    loading\n  } = state;\n  const [userObj, setuserObj] = useState();\n  const [problemObj, setproblemObj] = useState();\n\n  const getUsersData = () => {\n    const totalExperts = users ? users.filter(user => user.role === 'expert').length : 0;\n    const totalAnalysts = users ? users.filter(user => user.role === 'analyst').length : 0;\n    const userObj = [{\n      name: 'Всего экспертов',\n      stats: totalExperts\n    }, {\n      name: 'Всего аналитиков',\n      stats: totalAnalysts\n    }];\n    return userObj;\n  };\n\n  const getProblemsData = () => {\n    const totalProblems = problems ? problems.length : 0;\n    const totalProblemsOpened = problems ? problems.filter(problem => problem.status === 'Открыта').length : 0;\n    const totalProblemsSolving = problems ? problems.filter(problem => problem.status === 'Решается').length : 0;\n    const totalProblemsSolved = problems ? problems.filter(problem => problem.status === 'Решена').length : 0;\n    const problemObj = [{\n      name: 'Открыто',\n      stats: totalProblemsOpened\n    }, {\n      name: 'Решается',\n      stats: totalProblemsSolving\n    }, {\n      name: 'Решено',\n      stats: totalProblemsSolved\n    }, {\n      name: 'Всего проблем',\n      stats: totalProblems\n    }];\n    return problemObj;\n  };\n\n  useEffect(() => {\n    setuserObj(getUsersData());\n    setproblemObj(getProblemsData());\n  }, [users, problems]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"\\u0414\\u043E\\u043C\\u0430\\u0448\\u043D\\u044F\\u044F \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430\"), userObj ? /*#__PURE__*/React.createElement(UserStats, {\n    users: userObj,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 18\n    }\n  }) : null, problemObj ? /*#__PURE__*/React.createElement(ProblemStats, {\n    problems: problemObj,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }) : null);\n}\n\nexport default HOC(Dashboard, index);","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/components/panel/Dashboard/Dashboard.js"],"names":["React","useContext","useState","useEffect","UserContext","ProblemContext","Typography","UserStats","ProblemStats","HOC","Title","index","Dashboard","state","problems","users","loading","userObj","setuserObj","problemObj","setproblemObj","getUsersData","totalExperts","filter","user","role","length","totalAnalysts","name","stats","getProblemsData","totalProblems","totalProblemsOpened","problem","status","totalProblemsSolving","totalProblemsSolved","textAlign"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from 'react';\nimport { UserContext } from '../../../context/user/userContext';\nimport { ProblemContext } from '../../../context/problem/problemContext';\nimport { Typography } from 'antd';\nimport UserStats from './Stats/UserStats';\nimport ProblemStats from './Stats/ProblemStats';\nimport HOC from '../HOC';\n\nconst { Title } = Typography;\nconst index = '1';\nfunction Dashboard() {\n  const { state } = useContext(UserContext);\n  const { problems } = useContext(ProblemContext).state;\n\n  const { users, loading } = state;\n\n  const [userObj, setuserObj] = useState();\n  const [problemObj, setproblemObj] = useState();\n\n  const getUsersData = () => {\n    const totalExperts = users\n      ? users.filter((user) => user.role === 'expert').length\n      : 0;\n    const totalAnalysts = users\n      ? users.filter((user) => user.role === 'analyst').length\n      : 0;\n    const userObj = [\n      { name: 'Всего экспертов', stats: totalExperts },\n      { name: 'Всего аналитиков', stats: totalAnalysts }\n    ];\n\n    return userObj;\n  };\n  const getProblemsData = () => {\n    const totalProblems = problems ? problems.length : 0;\n    const totalProblemsOpened = problems\n      ? problems.filter((problem) => problem.status === 'Открыта').length\n      : 0;\n    const totalProblemsSolving = problems\n      ? problems.filter((problem) => problem.status === 'Решается').length\n      : 0;\n    const totalProblemsSolved = problems\n      ? problems.filter((problem) => problem.status === 'Решена').length\n      : 0;\n    const problemObj = [\n      { name: 'Открыто', stats: totalProblemsOpened },\n      { name: 'Решается', stats: totalProblemsSolving },\n      { name: 'Решено', stats: totalProblemsSolved },\n      { name: 'Всего проблем', stats: totalProblems }\n    ];\n\n    return problemObj;\n  };\n\n  useEffect(() => {\n    setuserObj(getUsersData());\n    setproblemObj(getProblemsData());\n  }, [users, problems]);\n\n  return (\n    <div className=\"container\">\n      <Title style={{ textAlign: 'center' }}>Домашняя страница</Title>\n      {userObj ? <UserStats users={userObj} loading={loading} /> : null}\n      {problemObj ? (\n        <ProblemStats problems={problemObj} loading={loading} />\n      ) : null}\n    </div>\n  );\n}\n\nexport default HOC(Dashboard, index);\n"]},"metadata":{},"sourceType":"module"}