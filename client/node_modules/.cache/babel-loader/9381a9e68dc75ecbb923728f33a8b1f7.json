{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\components\\\\panel\\\\Lists\\\\Tables\\\\UserTable.js\";\nimport React from 'react';\nimport { Table } from 'antd';\nimport { Link } from 'react-router-dom';\nconst columns = [{\n  title: 'ID',\n  dataIndex: 'Id',\n  key: 'Id',\n  sorter: (a, b) => a.Id - b.Id,\n  sortDirections: ['ascend', 'descend'],\n  defaultSortOrder: 'ascend'\n}, {\n  title: 'Имя',\n  dataIndex: 'name',\n  key: 'name',\n  render: (text, record) => /*#__PURE__*/React.createElement(Link, {\n    to: `/user/${record._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 31\n    }\n  }, text),\n  sorter: (a, b) => a.name.localeCompare(b.name),\n  sortDirections: ['ascend', 'descend']\n}, {\n  title: 'Фамилия',\n  dataIndex: 'surname',\n  key: 'surname',\n  sorter: (a, b) => a.surname.localeCompare(b.surname),\n  sortDirections: ['ascend', 'descend']\n}, {\n  title: 'Роль',\n  dataIndex: 'role',\n  key: 'role',\n  render: (text, record) => text === 'analyst' ? 'Аналитик' : 'Эксперт',\n  filters: [{\n    text: 'Аналитик',\n    value: 'analyst'\n  }, {\n    text: 'Эксперт',\n    value: 'expert'\n  }],\n  onFilter: (value, record) => record.role.indexOf(value) === 0\n}, {\n  title: 'E-Mail',\n  dataIndex: 'email',\n  key: 'email',\n  sorter: (a, b) => a.email.localeCompare(b.email),\n  sortDirections: ['ascend', 'descend']\n}];\n\nfunction UserTable({\n  data\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    locale: {\n      emptyText: 'Нет данных'\n    },\n    className: \"clearfix\",\n    columns: columns,\n    dataSource: data,\n    rowKey: \"Id\",\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default UserTable;","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/components/panel/Lists/Tables/UserTable.js"],"names":["React","Table","Link","columns","title","dataIndex","key","sorter","a","b","Id","sortDirections","defaultSortOrder","render","text","record","_id","name","localeCompare","surname","filters","value","onFilter","role","indexOf","email","UserTable","data","emptyText","clear"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'Id',\n    key: 'Id',\n    sorter: (a, b) => a.Id - b.Id,\n    sortDirections: ['ascend', 'descend'],\n    defaultSortOrder: 'ascend'\n  },\n  {\n    title: 'Имя',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text, record) => <Link to={`/user/${record._id}`}>{text}</Link>,\n    sorter: (a, b) => a.name.localeCompare(b.name),\n    sortDirections: ['ascend', 'descend']\n  },\n\n  {\n    title: 'Фамилия',\n    dataIndex: 'surname',\n    key: 'surname',\n    sorter: (a, b) => a.surname.localeCompare(b.surname),\n    sortDirections: ['ascend', 'descend']\n  },\n\n  {\n    title: 'Роль',\n    dataIndex: 'role',\n    key: 'role',\n    render: (text, record) => (text === 'analyst' ? 'Аналитик' : 'Эксперт'),\n    filters: [\n      {\n        text: 'Аналитик',\n        value: 'analyst'\n      },\n      {\n        text: 'Эксперт',\n        value: 'expert'\n      }\n    ],\n    onFilter: (value, record) => record.role.indexOf(value) === 0\n  },\n\n  {\n    title: 'E-Mail',\n    dataIndex: 'email',\n    key: 'email',\n    sorter: (a, b) => a.email.localeCompare(b.email),\n    sortDirections: ['ascend', 'descend']\n  }\n];\n\nfunction UserTable({ data }) {\n  return (\n    <>\n      <Table\n        locale={{ emptyText: 'Нет данных' }}\n        className=\"clearfix\"\n        columns={columns}\n        dataSource={data}\n        rowKey=\"Id\"\n        style={{ clear: 'both' }}\n      />\n    </>\n  );\n}\n\nexport default UserTable;\n"]},"metadata":{},"sourceType":"module"}