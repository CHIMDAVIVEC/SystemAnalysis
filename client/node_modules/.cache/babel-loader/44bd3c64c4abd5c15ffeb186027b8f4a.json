{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\context\\\\user\\\\userContext.js\";\nimport React, { createContext, useReducer, useEffect, useCallback } from 'react';\nimport userReducer from './userReducer';\nimport * as types from './userActionTypes';\nimport ClientAPI from '../../helpers/apiUtils';\nconst initialUserState = {\n  loading: false,\n  error: false,\n  users: '',\n  user: null,\n  me: null,\n  errResponse: '',\n  message: null\n};\nexport const UserContext = createContext(initialUserState);\nexport const UserProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(userReducer, initialUserState);\n\n  const UserReset = () => {\n    dispatch({\n      type: types.USER_RESET\n    });\n  };\n\n  const fetchUsers = useCallback(async () => {\n    dispatch({\n      type: types.USER_START\n    });\n\n    try {\n      const res = await ClientAPI.get('/api/user/');\n      dispatch({\n        type: types.USER_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const fetchLoggedInUser = useCallback(async () => {\n    dispatch({\n      type: types.USER_START\n    });\n\n    try {\n      const res = await ClientAPI.get('/api/user/me');\n      dispatch({\n        type: types.GET_LOGGED_IN_USER,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const addUser = useCallback(async data => {\n    dispatch({\n      type: types.USER_START\n    });\n\n    try {\n      const res = await ClientAPI.post('/api/auth/register', data);\n      dispatch({\n        type: types.USER_ADD,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const fetchSingleUser = useCallback(async id => {\n    dispatch({\n      type: types.USER_START\n    });\n    const tempState = { ...state\n    };\n\n    if (!tempState.users) {\n      try {\n        const res = await ClientAPI.get(`/api/user/single/${id}`);\n        dispatch({\n          type: types.GET_USER,\n          payload: res.data.data\n        });\n      } catch (error) {\n        dispatch({\n          type: types.USER_FAILURE,\n          payload: error.response.data.error_msg\n        });\n      }\n    } else {\n      const user = tempState.filter(user => user._id === id);\n      dispatch({\n        type: types.GET_USER,\n        payload: user\n      });\n    }\n  }, []);\n  const editUserAction = useCallback(async data => {\n    dispatch({\n      type: types.USER_START\n    });\n\n    try {\n      const res = await ClientAPI.patch('/api/user/edit-user', data);\n      dispatch({\n        type: types.USER_EDIT,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const deleteUserAction = useCallback(async id => {\n    dispatch({\n      type: types.USER_START\n    });\n\n    try {\n      await ClientAPI.get(`/api/user/delete/${id}`);\n      console.log(id);\n      dispatch({\n        type: types.USER_DELETE,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const changeUserPasswordAction = useCallback(async data => {\n    dispatch({\n      type: types.USER_START\n    });\n\n    try {\n      await ClientAPI.post('/api/auth/change-password', data);\n      dispatch({\n        type: types.USER_PASSWORD_CHANGE\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n\n    fetchSingleUser(data._id);\n  }, []);\n  useEffect(() => {\n    fetchLoggedInUser();\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: {\n      state,\n      fetchUsers,\n      fetchSingleUser,\n      editUserAction,\n      changeUserPasswordAction,\n      addUser,\n      deleteUserAction,\n      UserReset\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/context/user/userContext.js"],"names":["React","createContext","useReducer","useEffect","useCallback","userReducer","types","ClientAPI","initialUserState","loading","error","users","user","me","errResponse","message","UserContext","UserProvider","children","state","dispatch","UserReset","type","USER_RESET","fetchUsers","USER_START","res","get","USER_SUCCESS","payload","data","USER_FAILURE","response","error_msg","fetchLoggedInUser","GET_LOGGED_IN_USER","addUser","post","USER_ADD","fetchSingleUser","id","tempState","GET_USER","filter","_id","editUserAction","patch","USER_EDIT","deleteUserAction","console","log","USER_DELETE","changeUserPasswordAction","USER_PASSWORD_CHANGE"],"mappings":"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","sourcesContent":["import React, {\n  createContext,\n  useReducer,\n  useEffect,\n  useCallback\n} from 'react';\nimport userReducer from './userReducer';\nimport * as types from './userActionTypes';\nimport ClientAPI from '../../helpers/apiUtils';\n\nconst initialUserState = {\n  loading: false,\n  error: false,\n  users: '',\n  user: null,\n  me: null,\n  errResponse: '',\n  message: null\n};\n\nexport const UserContext = createContext(initialUserState);\n\nexport const UserProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(userReducer, initialUserState);\n\n  const UserReset = () => {\n    dispatch({\n      type: types.USER_RESET\n    });\n  };\n\n  const fetchUsers = useCallback(async () => {\n    dispatch({\n      type: types.USER_START\n    });\n    try {\n      const res = await ClientAPI.get('/api/user/');\n      dispatch({\n        type: types.USER_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const fetchLoggedInUser = useCallback(async () => {\n    dispatch({\n      type: types.USER_START\n    });\n    try {\n      const res = await ClientAPI.get('/api/user/me');\n      dispatch({\n        type: types.GET_LOGGED_IN_USER,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const addUser = useCallback(async (data) => {\n    dispatch({\n      type: types.USER_START\n    });\n    try {\n      const res = await ClientAPI.post('/api/auth/register', data);\n      dispatch({\n        type: types.USER_ADD,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const fetchSingleUser = useCallback(async (id) => {\n    dispatch({\n      type: types.USER_START\n    });\n    const tempState = { ...state };\n    if (!tempState.users) {\n      try {\n        const res = await ClientAPI.get(`/api/user/single/${id}`);\n        dispatch({\n          type: types.GET_USER,\n          payload: res.data.data\n        });\n      } catch (error) {\n        dispatch({\n          type: types.USER_FAILURE,\n          payload: error.response.data.error_msg\n        });\n      }\n    } else {\n      const user = tempState.filter((user) => user._id === id);\n      dispatch({\n        type: types.GET_USER,\n        payload: user\n      });\n    }\n  }, []);\n\n  const editUserAction = useCallback(async (data) => {\n    dispatch({\n      type: types.USER_START\n    });\n    try {\n      const res = await ClientAPI.patch('/api/user/edit-user', data);\n      dispatch({\n        type: types.USER_EDIT,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const deleteUserAction = useCallback(async (id) => {\n    dispatch({\n      type: types.USER_START\n    });\n    try {\n      await ClientAPI.get(`/api/user/delete/${id}`);\n      console.log(id);\n      dispatch({\n        type: types.USER_DELETE,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const changeUserPasswordAction = useCallback(async (data) => {\n    dispatch({\n      type: types.USER_START\n    });\n    try {\n      await ClientAPI.post('/api/auth/change-password', data);\n      dispatch({\n        type: types.USER_PASSWORD_CHANGE\n      });\n    } catch (error) {\n      dispatch({\n        type: types.USER_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n    fetchSingleUser(data._id);\n  }, []);\n\n  useEffect(() => {\n    fetchLoggedInUser();\n    fetchUsers();\n  }, []);\n\n  return (\n    <UserContext.Provider\n      value={{\n        state,\n        fetchUsers,\n        fetchSingleUser,\n        editUserAction,\n        changeUserPasswordAction,\n        addUser,\n        deleteUserAction,\n        UserReset\n      }}\n    >\n      {children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}