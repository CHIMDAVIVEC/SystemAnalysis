{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\components\\\\panel\\\\SinglePages\\\\SingleProblem.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Typography, Popconfirm, Button } from 'antd';\nimport { ProblemContext } from '../../../context/problem/problemContext';\nimport { UserContext } from '../../../context/user/userContext';\nimport SingleProblemStyled from '../../styles/SingleProblemStyled';\nimport ProblemForm from '../Forms/ProblemForm';\nimport Loader from '../../Loader/Loader';\nimport HOC from '../HOC';\n\nfunction SingleProblem(props) {\n  const {\n    state,\n    fetchSingleProblem,\n    editProblem,\n    deleteProblem\n  } = useContext(ProblemContext);\n  const {\n    users,\n    me\n  } = useContext(UserContext).state;\n  const experts = Object.values(users).filter(user => user.role === 'expert');\n  const {\n    loading,\n    problem\n  } = state;\n  const id = props.match.params.id;\n  useEffect(() => {\n    fetchSingleProblem(id);\n  }, [fetchSingleProblem, id]);\n\n  const onFinish = values => {\n    values = { ...values,\n      _id: problem._id,\n      analyst: me._id,\n      status: problem.status,\n      progress: problem.progress\n    };\n    editProblem(values);\n  };\n\n  const onConfirmDelete = () => {\n    deleteProblem(id).then(() => setTimeout(function () {\n      window.location.replace('/problems');\n    }, 1000));\n  };\n\n  return /*#__PURE__*/React.createElement(SingleProblemStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, problem && problem.status === 'Открыта' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u0440\\u043E\\u0431\\u043B\\u0435\\u043C\\u044B \\\"\", problem.name, \"\\\"\"), problem.status === 'Открыта' && /*#__PURE__*/React.createElement(Popconfirm, {\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    onConfirm: onConfirmDelete,\n    okText: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n    cancelText: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right\",\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0431\\u043B\\u0435\\u043C\\u0443\")), /*#__PURE__*/React.createElement(ProblemForm, {\n    problem: problem,\n    experts: experts,\n    onFinish: onFinish,\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  })) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default HOC(SingleProblem);","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/components/panel/SinglePages/SingleProblem.js"],"names":["React","useContext","useEffect","Typography","Popconfirm","Button","ProblemContext","UserContext","SingleProblemStyled","ProblemForm","Loader","HOC","SingleProblem","props","state","fetchSingleProblem","editProblem","deleteProblem","users","me","experts","Object","values","filter","user","role","loading","problem","id","match","params","onFinish","_id","analyst","status","progress","onConfirmDelete","then","setTimeout","window","location","replace","name"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Typography, Popconfirm, Button } from 'antd';\nimport { ProblemContext } from '../../../context/problem/problemContext';\nimport { UserContext } from '../../../context/user/userContext';\n\nimport SingleProblemStyled from '../../styles/SingleProblemStyled';\nimport ProblemForm from '../Forms/ProblemForm';\nimport Loader from '../../Loader/Loader';\n\nimport HOC from '../HOC';\n\nfunction SingleProblem(props) {\n  const { state, fetchSingleProblem, editProblem, deleteProblem } = useContext(\n    ProblemContext\n  );\n\n  const { users, me } = useContext(UserContext).state;\n  const experts = Object.values(users).filter((user) => user.role === 'expert');\n  const { loading, problem } = state;\n\n  const id = props.match.params.id;\n\n  useEffect(() => {\n    fetchSingleProblem(id);\n  }, [fetchSingleProblem, id]);\n\n  const onFinish = (values) => {\n    values = {\n      ...values,\n      _id: problem._id,\n      analyst: me._id,\n      status: problem.status,\n      progress: problem.progress\n    };\n    editProblem(values);\n  };\n\n  const onConfirmDelete = () => {\n    deleteProblem(id).then(() => setTimeout(function(){ window.location.replace('/problems');}, 1000));\n  };\n\n  return (\n    <SingleProblemStyled>\n      {problem && problem.status === 'Открыта' ? (\n        <>\n          <Typography>Редактирование проблемы \"{problem.name}\"</Typography>\n          {problem.status === 'Открыта' && (\n            <Popconfirm\n              title=\"Вы уверены?\"\n              onConfirm={onConfirmDelete}\n              okText=\"Удалить\"\n              cancelText=\"Закрыть\"\n            >\n              <Button className=\"float-right\" danger>\n                Удалить проблему\n              </Button>\n            </Popconfirm>\n          )}\n\n          <ProblemForm\n            problem={problem}\n            experts={experts}\n            onFinish={onFinish}\n            loading={loading}\n          />\n        </>\n      ) : (\n        <Loader />\n      )}\n    </SingleProblemStyled>\n  );\n}\n\nexport default HOC(SingleProblem);\n"]},"metadata":{},"sourceType":"module"}