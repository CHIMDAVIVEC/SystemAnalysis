{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\context\\\\problem\\\\problemContext.js\";\nimport React, { createContext, useReducer, useEffect, useCallback } from 'react';\nimport problemReducer from './problemReducer';\nimport * as types from './problemActionTypes';\nimport ClientAPI from '../../helpers/apiUtils';\nconst initialProblemState = {\n  loading: false,\n  error: false,\n  problems: '',\n  problem: null,\n  errResponse: '',\n  message: null\n};\nexport const ProblemContext = createContext(initialProblemState);\nexport const ProblemProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(problemReducer, initialProblemState);\n\n  const ProblemReset = () => {\n    dispatch({\n      type: types.PROBLEM_RESET\n    });\n  };\n\n  const fetchProblems = useCallback(async () => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n\n    try {\n      const res = await ClientAPI.get('/api/problem/');\n      dispatch({\n        type: types.PROBLEM_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const addProblem = useCallback(async data => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n\n    try {\n      const res = await ClientAPI.post('/api/problem/add', data);\n      dispatch({\n        type: types.PROBLEM_ADD,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const fetchSingleProblem = useCallback(async id => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n\n    try {\n      const res = await ClientAPI.get(`/api/problem/single/${id}`);\n      dispatch({\n        type: types.GET_PROBLEM,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const editProblem = useCallback(async data => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n\n    try {\n      const res = await ClientAPI.patch('/api/problem/edit', data);\n      dispatch({\n        type: types.PROBLEM_EDIT,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const setSolved = useCallback(async data => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n\n    try {\n      const res = await ClientAPI.patch('/api/problem/solved', data);\n      dispatch({\n        type: types.PROBLEM_EDIT,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const editProblemSolution = useCallback(async data => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n\n    try {\n      const res = await ClientAPI.patch('/api/problem/solution', data);\n      dispatch({\n        type: types.PROBLEM_EDIT,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  const deleteProblem = useCallback(async id => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n\n    try {\n      await ClientAPI.get(`/api/problem/delete/${id}`);\n      console.log(id);\n      dispatch({\n        type: types.PROBLEM_DELETE,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  useEffect(() => {\n    fetchProblems();\n  }, []);\n  return /*#__PURE__*/React.createElement(ProblemContext.Provider, {\n    value: {\n      state,\n      fetchProblems,\n      fetchSingleProblem,\n      editProblem,\n      editProblemSolution,\n      setSolved,\n      addProblem,\n      deleteProblem,\n      ProblemReset\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/context/problem/problemContext.js"],"names":["React","createContext","useReducer","useEffect","useCallback","problemReducer","types","ClientAPI","initialProblemState","loading","error","problems","problem","errResponse","message","ProblemContext","ProblemProvider","children","state","dispatch","ProblemReset","type","PROBLEM_RESET","fetchProblems","PROBLEM_START","res","get","PROBLEM_SUCCESS","payload","data","PROBLEM_FAILURE","response","error_msg","addProblem","post","PROBLEM_ADD","fetchSingleProblem","id","GET_PROBLEM","editProblem","patch","PROBLEM_EDIT","setSolved","editProblemSolution","deleteProblem","console","log","PROBLEM_DELETE"],"mappings":";AAAA,OAAOA,KAAP,IACEC,aADF,EAEEC,UAFF,EAGEC,SAHF,EAIEC,WAJF,QAKO,OALP;AAMA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,sBAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AAEA,MAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,KAAK,EAAE,KAFmB;AAG1BC,EAAAA,QAAQ,EAAE,EAHgB;AAI1BC,EAAAA,OAAO,EAAE,IAJiB;AAK1BC,EAAAA,WAAW,EAAE,EALa;AAM1BC,EAAAA,OAAO,EAAE;AANiB,CAA5B;AASA,OAAO,MAAMC,cAAc,GAAGd,aAAa,CAACO,mBAAD,CAApC;AAEP,OAAO,MAAMQ,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC/C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACG,cAAD,EAAiBG,mBAAjB,CAApC;;AAEA,QAAMY,YAAY,GAAG,MAAM;AACzBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,KAAK,CAACgB;AADL,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAMC,aAAa,GAAGnB,WAAW,CAAC,YAAY;AAC5Ce,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,KAAK,CAACkB;AADL,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,SAAS,CAACmB,GAAV,CAAc,eAAd,CAAlB;AACAP,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACqB,eADL;AAEPC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOnB,KAAP,EAAc;AACdS,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACwB,eADL;AAEPF,QAAAA,OAAO,EAAElB,KAAK,CAACqB,QAAN,CAAeF,IAAf,CAAoBG;AAFtB,OAAD,CAAR;AAID;AACF,GAhBgC,EAgB9B,EAhB8B,CAAjC;AAkBA,QAAMC,UAAU,GAAG7B,WAAW,CAAC,MAAOyB,IAAP,IAAgB;AAC7CV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,KAAK,CAACkB;AADL,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,SAAS,CAAC2B,IAAV,CAAe,kBAAf,EAAmCL,IAAnC,CAAlB;AACAV,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAAC6B,WADL;AAEPP,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOnB,KAAP,EAAc;AACdS,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACwB,eADL;AAEPF,QAAAA,OAAO,EAAElB,KAAK,CAACqB,QAAN,CAAeF,IAAf,CAAoBG;AAFtB,OAAD,CAAR;AAID;AACF,GAhB6B,EAgB3B,EAhB2B,CAA9B;AAkBA,QAAMI,kBAAkB,GAAGhC,WAAW,CAAC,MAAOiC,EAAP,IAAc;AACnDlB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,KAAK,CAACkB;AADL,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,SAAS,CAACmB,GAAV,CAAe,uBAAsBW,EAAG,EAAxC,CAAlB;AACAlB,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACgC,WADL;AAEPV,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOnB,KAAP,EAAc;AACdS,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACwB,eADL;AAEPF,QAAAA,OAAO,EAAElB,KAAK,CAACqB,QAAN,CAAeF,IAAf,CAAoBG;AAFtB,OAAD,CAAR;AAID;AACF,GAhBqC,EAgBnC,EAhBmC,CAAtC;AAkBA,QAAMO,WAAW,GAAGnC,WAAW,CAAC,MAAOyB,IAAP,IAAgB;AAC9CV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,KAAK,CAACkB;AADL,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,SAAS,CAACiC,KAAV,CAAgB,mBAAhB,EAAqCX,IAArC,CAAlB;AACAV,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACmC,YADL;AAEPb,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOnB,KAAP,EAAc;AACdS,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACwB,eADL;AAEPF,QAAAA,OAAO,EAAElB,KAAK,CAACqB,QAAN,CAAeF,IAAf,CAAoBG;AAFtB,OAAD,CAAR;AAID;AACF,GAhB8B,EAgB5B,EAhB4B,CAA/B;AAkBA,QAAMU,SAAS,GAAGtC,WAAW,CAAC,MAAOyB,IAAP,IAAgB;AAC5CV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,KAAK,CAACkB;AADL,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,SAAS,CAACiC,KAAV,CAAgB,qBAAhB,EAAuCX,IAAvC,CAAlB;AACAV,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACmC,YADL;AAEPb,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOnB,KAAP,EAAc;AACdS,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACwB,eADL;AAEPF,QAAAA,OAAO,EAAElB,KAAK,CAACqB,QAAN,CAAeF,IAAf,CAAoBG;AAFtB,OAAD,CAAR;AAID;AACF,GAhB4B,EAgB1B,EAhB0B,CAA7B;AAkBA,QAAMW,mBAAmB,GAAGvC,WAAW,CAAC,MAAOyB,IAAP,IAAgB;AACtDV,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,KAAK,CAACkB;AADL,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,SAAS,CAACiC,KAAV,CAAgB,uBAAhB,EAAyCX,IAAzC,CAAlB;AACAV,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACmC,YADL;AAEPb,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFX,OAAD,CAAR;AAID,KAND,CAME,OAAOnB,KAAP,EAAc;AACdS,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACwB,eADL;AAEPF,QAAAA,OAAO,EAAElB,KAAK,CAACqB,QAAN,CAAeF,IAAf,CAAoBG;AAFtB,OAAD,CAAR;AAID;AACF,GAhBsC,EAgBpC,EAhBoC,CAAvC;AAkBA,QAAMY,aAAa,GAAGxC,WAAW,CAAC,MAAOiC,EAAP,IAAc;AAC9ClB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEf,KAAK,CAACkB;AADL,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMjB,SAAS,CAACmB,GAAV,CAAe,uBAAsBW,EAAG,EAAxC,CAAN;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ;AACAlB,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACyC,cADL;AAEPnB,QAAAA,OAAO,EAAES;AAFF,OAAD,CAAR;AAID,KAPD,CAOE,OAAO3B,KAAP,EAAc;AACdS,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEf,KAAK,CAACwB,eADL;AAEPF,QAAAA,OAAO,EAAElB,KAAK,CAACqB,QAAN,CAAeF,IAAf,CAAoBG;AAFtB,OAAD,CAAR;AAID;AACF,GAjBgC,EAiB9B,EAjB8B,CAAjC;AAmBA7B,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,aAAa;AACd,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,oBAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLL,MAAAA,KADK;AAELK,MAAAA,aAFK;AAGLa,MAAAA,kBAHK;AAILG,MAAAA,WAJK;AAKLI,MAAAA,mBALK;AAMLD,MAAAA,SANK;AAOLT,MAAAA,UAPK;AAQLW,MAAAA,aARK;AASLxB,MAAAA;AATK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAaGH,QAbH,CADF;AAiBD,CA7JM","sourcesContent":["import React, {\n  createContext,\n  useReducer,\n  useEffect,\n  useCallback\n} from 'react';\nimport problemReducer from './problemReducer';\nimport * as types from './problemActionTypes';\nimport ClientAPI from '../../helpers/apiUtils';\n\nconst initialProblemState = {\n  loading: false,\n  error: false,\n  problems: '',\n  problem: null,\n  errResponse: '',\n  message: null\n};\n\nexport const ProblemContext = createContext(initialProblemState);\n\nexport const ProblemProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(problemReducer, initialProblemState);\n\n  const ProblemReset = () => {\n    dispatch({\n      type: types.PROBLEM_RESET\n    });\n  };\n\n  const fetchProblems = useCallback(async () => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n    try {\n      const res = await ClientAPI.get('/api/problem/');\n      dispatch({\n        type: types.PROBLEM_SUCCESS,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const addProblem = useCallback(async (data) => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n    try {\n      const res = await ClientAPI.post('/api/problem/add', data);\n      dispatch({\n        type: types.PROBLEM_ADD,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const fetchSingleProblem = useCallback(async (id) => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n    try {\n      const res = await ClientAPI.get(`/api/problem/single/${id}`);\n      dispatch({\n        type: types.GET_PROBLEM,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const editProblem = useCallback(async (data) => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n    try {\n      const res = await ClientAPI.patch('/api/problem/edit', data);\n      dispatch({\n        type: types.PROBLEM_EDIT,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const setSolved = useCallback(async (data) => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n    try {\n      const res = await ClientAPI.patch('/api/problem/solved', data);\n      dispatch({\n        type: types.PROBLEM_EDIT,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const editProblemSolution = useCallback(async (data) => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n    try {\n      const res = await ClientAPI.patch('/api/problem/solution', data);\n      dispatch({\n        type: types.PROBLEM_EDIT,\n        payload: res.data.data\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  const deleteProblem = useCallback(async (id) => {\n    dispatch({\n      type: types.PROBLEM_START\n    });\n    try {\n      await ClientAPI.get(`/api/problem/delete/${id}`);\n      console.log(id);\n      dispatch({\n        type: types.PROBLEM_DELETE,\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: types.PROBLEM_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    fetchProblems();\n  }, []);\n\n  return (\n    <ProblemContext.Provider\n      value={{\n        state,\n        fetchProblems,\n        fetchSingleProblem,\n        editProblem,\n        editProblemSolution,\n        setSolved,\n        addProblem,\n        deleteProblem,\n        ProblemReset\n      }}\n    >\n      {children}\n    </ProblemContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}