{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\components\\\\panel\\\\AddNew\\\\AddNewProblem.js\";\nimport React, { useContext } from 'react';\nimport { ProblemContext } from '../../../context/problem/problemContext';\nimport { UserContext } from '../../../context/user/userContext';\nimport ProblemForm from '../Forms/ProblemForm';\nimport HOC from '../HOC';\n\nfunction AddNewProblem(props) {\n  const {\n    addProblem\n  } = useContext(ProblemContext);\n  const {\n    users,\n    me\n  } = useContext(UserContext).state;\n  const experts = Object.values(users).filter(user => user.role === 'expert');\n\n  const onFinish = values => {\n    values.analyst = me._id;\n    addProblem(values).then(() => setTimeout(function () {\n      window.location.replace('/problems');\n    }, 1000));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProblemForm, {\n    onFinish: onFinish,\n    experts: experts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default HOC(AddNewProblem);","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/components/panel/AddNew/AddNewProblem.js"],"names":["React","useContext","ProblemContext","UserContext","ProblemForm","HOC","AddNewProblem","props","addProblem","users","me","state","experts","Object","values","filter","user","role","onFinish","analyst","_id","then","setTimeout","window","location","replace"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,cAAT,QAA+B,yCAA/B;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAiBP,UAAU,CAACC,cAAD,CAAjC;AACA,QAAM;AAAEO,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAgBT,UAAU,CAACE,WAAD,CAAV,CAAwBQ,KAA9C;AACA,QAAMC,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcL,KAAd,EAAqBM,MAArB,CAA6BC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAc,QAApD,CAAhB;;AAEA,QAAMC,QAAQ,GAAIJ,MAAD,IAAY;AAC3BA,IAAAA,MAAM,CAACK,OAAP,GAAiBT,EAAE,CAACU,GAApB;AACAZ,IAAAA,UAAU,CAACM,MAAD,CAAV,CAAmBO,IAAnB,CAAwB,MAAMC,UAAU,CAAC,YAAU;AAAEC,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,WAAxB;AAAsC,KAAnD,EAAqD,IAArD,CAAxC;AACD,GAHD;;AAKA,sBACE,uDACE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEP,QAAvB;AAAiC,IAAA,OAAO,EAAEN,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,eAAeP,GAAG,CAACC,aAAD,CAAlB","sourcesContent":["import React, { useContext } from 'react';\nimport { ProblemContext } from '../../../context/problem/problemContext';\nimport { UserContext } from '../../../context/user/userContext';\nimport ProblemForm from '../Forms/ProblemForm';\nimport HOC from '../HOC';\n\nfunction AddNewProblem(props) {\n  const { addProblem } = useContext(ProblemContext);\n  const { users, me } = useContext(UserContext).state;\n  const experts = Object.values(users).filter((user) => user.role === 'expert');\n\n  const onFinish = (values) => {\n    values.analyst = me._id;\n    addProblem(values).then(() => setTimeout(function(){ window.location.replace('/problems');}, 1000));\n  };\n\n  return (\n    <>\n      <ProblemForm onFinish={onFinish} experts={experts} />\n    </>\n  );\n}\n\nexport default HOC(AddNewProblem);\n"]},"metadata":{},"sourceType":"module"}