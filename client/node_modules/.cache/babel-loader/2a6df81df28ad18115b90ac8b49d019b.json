{"ast":null,"code":"import * as types from './userActionTypes';\nexport default ((state, action) => {\n  switch (action.type) {\n    case types.USER_START:\n      return { ...state,\n        loading: true,\n        message: null,\n        user: null,\n        error: null\n      };\n\n    case types.USER_SUCCESS:\n      return { ...state,\n        loading: false,\n        users: action.payload\n      };\n\n    case types.GET_LOGGED_IN_USER:\n      return { ...state,\n        loading: false,\n        me: action.payload\n      };\n\n    case types.GET_USER:\n      return { ...state,\n        loading: false,\n        user: action.payload,\n        error: false,\n        errResponse: ''\n      };\n\n    case types.USER_ADD:\n      return { ...state,\n        users: [action.payload, ...state.users],\n        loading: false,\n        error: false,\n        errResponse: '',\n        message: 'Пользователь успешно добавлен!'\n      };\n\n    case types.USER_EDIT:\n      const tempState = state.users.slice().filter(data => data._id !== action.payload._id);\n      return { ...state,\n        users: [action.payload, ...tempState],\n        loading: false,\n        error: false,\n        errResponse: '',\n        user: action.payload,\n        message: 'Изменения успешно внесены!'\n      };\n\n    case types.USER_DELETE:\n      return { ...state,\n        users: [...state.users.slice().filter(data => data._id !== action.payload)],\n        loading: false,\n        error: false,\n        errResponse: '',\n        user: null,\n        message: 'Пользователь успешно удалён!'\n      };\n\n    case types.USER_PASSWORD_CHANGE:\n      return { ...state,\n        loading: false,\n        error: false,\n        errResponse: '',\n        message: 'Пароль успешно изменён!'\n      };\n\n    case types.USER_FAILURE:\n      return { ...state,\n        loading: false,\n        error: true,\n        errResponse: action.payload\n      };\n\n    case types.USER_RESET:\n      return { ...state,\n        loading: false,\n        error: false,\n        errResponse: '',\n        message: null\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/context/user/userReducer.js"],"names":["types","state","action","type","USER_START","loading","message","user","error","USER_SUCCESS","users","payload","GET_LOGGED_IN_USER","me","GET_USER","errResponse","USER_ADD","USER_EDIT","tempState","slice","filter","data","_id","USER_DELETE","USER_PASSWORD_CHANGE","USER_FAILURE","USER_RESET"],"mappings":"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","sourcesContent":["import * as types from './userActionTypes';\n\nexport default (state, action) => {\n  switch (action.type) {\n    case types.USER_START:\n      return {\n        ...state,\n        loading: true,\n        message: null,\n        user: null,\n        error: null\n      };\n\n    case types.USER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        users: action.payload\n      };\n    case types.GET_LOGGED_IN_USER:\n      return {\n        ...state,\n        loading: false,\n        me: action.payload\n      };\n    case types.GET_USER:\n      return {\n        ...state,\n        loading: false,\n        user: action.payload,\n        error: false,\n        errResponse: ''\n      };\n    case types.USER_ADD:\n      return {\n        ...state,\n        users: [action.payload, ...state.users],\n        loading: false,\n        error: false,\n        errResponse: '',\n        message: 'Пользователь успешно добавлен!'\n      };\n\n    case types.USER_EDIT:\n      const tempState = state.users\n        .slice()\n        .filter((data) => data._id !== action.payload._id);\n\n      return {\n        ...state,\n        users: [action.payload, ...tempState],\n        loading: false,\n        error: false,\n        errResponse: '',\n        user: action.payload,\n        message: 'Изменения успешно внесены!'\n      };\n\n    case types.USER_DELETE:\n      return {\n        ...state,\n        users: [\n          ...state.users.slice().filter((data) => data._id !== action.payload)\n        ],\n        loading: false,\n        error: false,\n        errResponse: '',\n        user: null,\n        message: 'Пользователь успешно удалён!'\n      };\n    case types.USER_PASSWORD_CHANGE:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errResponse: '',\n        message: 'Пароль успешно изменён!'\n      };\n\n    case types.USER_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n        errResponse: action.payload\n      };\n    case types.USER_RESET:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        errResponse: '',\n        message: null\n      };\n\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}