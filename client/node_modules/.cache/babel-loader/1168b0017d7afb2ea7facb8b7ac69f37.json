{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\components\\\\auth\\\\Register.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Form, Input, Button, Select, message } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { RegistrationContext } from '../../context/register/RegistrationContext';\nimport axios from 'axios';\nconst {\n  Option\n} = Select;\n\nconst RegForm = ({\n  history\n}) => {\n  const {\n    RegAction,\n    state\n  } = useContext(RegistrationContext);\n  const {\n    loading,\n    error,\n    success,\n    errResponse\n  } = state;\n\n  const Login = async data => {\n    const res = await axios.post('/api/auth/login', data);\n    localStorage.setItem('howard_shores', res.data.access_token);\n  };\n\n  const onFinish = async values => {\n    const data = {\n      email: values.email,\n      password: values.password\n    };\n    await RegAction(values);\n    Login(data);\n  };\n\n  useEffect(() => {\n    if (error) {\n      message.error(errResponse);\n    } else if (success) {\n      message.success('Успешная регистрация!', 1).then(() => history.push('/home')).then(() => window.location.reload());\n    }\n  }, [error, errResponse, success, history]);\n\n  const login = () => {\n    history.push('/user/login');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"test\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center align-items-center min-vh-100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4 align-self-center text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0440\\u043E \\u043F\\u043E\\u0436\\u0430\\u043B\\u043E\\u0432\\u0430\\u0442\\u044C!\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044F \\u0434\\u043B\\u044F \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"), /*#__PURE__*/React.createElement(Form, {\n    name: \"normal_reg\",\n    className: \"reg-form\",\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    rules: [{\n      required: true,\n      message: 'Введите имя!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }),\n    type: \"text\",\n    placeholder: \"\\u0418\\u043C\\u044F\",\n    className: \"rounded-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"surname\",\n    rules: [{\n      required: true,\n      message: 'Введите фамилию!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }\n    }),\n    type: \"text\",\n    placeholder: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n    className: \"rounded-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"email\",\n    rules: [{\n      required: true,\n      message: 'Введите e-mail!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(UserOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }),\n    type: \"email\",\n    placeholder: \"E-mail\",\n    className: \"rounded-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Введите пароль!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(LockOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 29\n      }\n    }),\n    type: \"password\",\n    minLength: \"6\",\n    placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n    className: \"rounded-pill\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"role\",\n    rules: [{\n      required: true,\n      message: 'Выберите роль!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Option, {\n    value: \"analyst\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"\\u0410\\u043D\\u0430\\u043B\\u0438\\u0442\\u0438\\u043A\"), /*#__PURE__*/React.createElement(Option, {\n    value: \"expert\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\"))), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    className: \"reg-form-button\",\n    loading: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 19\n    }\n  }, \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\")), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, \"\\u0423\\u0436\\u0435 \\u0435\\u0441\\u0442\\u044C \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442?\"))))))));\n};\n\nexport default RegForm;","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/components/auth/Register.js"],"names":["React","useContext","useEffect","Form","Input","Button","Select","message","UserOutlined","LockOutlined","RegistrationContext","axios","Option","RegForm","history","RegAction","state","loading","error","success","errResponse","Login","data","res","post","localStorage","setItem","access_token","onFinish","values","email","password","then","push","window","location","reload","login","remember","required"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { Form, Input, Button, Select, message } from 'antd';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport { RegistrationContext } from '../../context/register/RegistrationContext';\r\nimport axios from 'axios';\r\n\r\nconst { Option } = Select;\r\n\r\nconst RegForm = ({ history }) => {\r\n  const { RegAction, state } = useContext(RegistrationContext);\r\n  const { loading, error, success, errResponse } = state;\r\n\r\n  const Login = async (data) => {\r\n    const res = await axios.post('/api/auth/login', data);\r\n    localStorage.setItem('howard_shores', res.data.access_token);\r\n  };\r\n\r\n  const onFinish = async (values) => {\r\n    const data = {\r\n      email: values.email,\r\n      password: values.password\r\n    };\r\n    await RegAction(values);\r\n    Login(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      message.error(errResponse);\r\n    } else if (success) {\r\n      message\r\n        .success('Успешная регистрация!', 1)\r\n        .then(() => history.push('/home'))\r\n        .then(() => window.location.reload());\r\n    }\r\n  }, [error, errResponse, success, history]);\r\n\r\n  const login = () => {\r\n    history.push('/user/login');\r\n  };\r\n\r\n  return (\r\n    <div className=\"test\">\r\n      <div className=\"container \">\r\n        <div>\r\n          <div className=\"row justify-content-center align-items-center min-vh-100\">\r\n            <div className=\"col-md-4 align-self-center text-center\">\r\n              <h2>Добро пожаловать!</h2>\r\n              <p>Заполните поля для регистрации</p>\r\n              <Form\r\n                name=\"normal_reg\"\r\n                className=\"reg-form\"\r\n                initialValues={{\r\n                  remember: true\r\n                }}\r\n                onFinish={onFinish}\r\n                size=\"large\"\r\n              >\r\n                <Form.Item\r\n                  name=\"name\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Введите имя!'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"text\"\r\n                    placeholder=\"Имя\"\r\n                    className=\"rounded-pill\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"surname\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Введите фамилию!'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"text\"\r\n                    placeholder=\"Фамилия\"\r\n                    className=\"rounded-pill\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"email\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Введите e-mail!'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"email\"\r\n                    placeholder=\"E-mail\"\r\n                    className=\"rounded-pill\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"password\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Введите пароль!'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Input\r\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                    type=\"password\"\r\n                    minLength=\"6\"\r\n                    placeholder=\"Пароль\"\r\n                    className=\"rounded-pill\"\r\n                  />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"role\"\r\n                  rules={[\r\n                    {\r\n                      required: true,\r\n                      message: 'Выберите роль!'\r\n                    }\r\n                  ]}\r\n                >\r\n                  <Select>\r\n                    <Option value=\"analyst\">Аналитик</Option>\r\n                    <Option value=\"expert\">Эксперт</Option>\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"reg-form-button\"\r\n                    loading={loading}\r\n                  >\r\n                    Зарегистрироваться\r\n                  </Button>\r\n                </Form.Item>\r\n\r\n                <Form.Item>\r\n                  <Button onClick={login}>Уже есть аккаунт?</Button>\r\n                </Form.Item>\r\n              </Form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegForm;\r\n"]},"metadata":{},"sourceType":"module"}