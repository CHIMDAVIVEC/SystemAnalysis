{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\components\\\\panel\\\\Lists\\\\Tables\\\\ExpertTable.js\";\nimport React from 'react';\nimport { Table } from 'antd';\nimport { Link } from 'react-router-dom';\nconst columns = [{\n  title: 'ID',\n  dataIndex: 'Id',\n  key: 'Id',\n  sorter: (a, b) => a.Id - b.Id,\n  sortDirections: ['ascend', 'descend'],\n  defaultSortOrder: 'ascend'\n}, {\n  title: 'Имя',\n  dataIndex: 'name',\n  key: 'name',\n  render: (text, record) => /*#__PURE__*/React.createElement(Link, {\n    to: `/expert/${record._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 31\n    }\n  }, text),\n  sorter: (a, b) => a.name.localeCompare(b.name),\n  sortDirections: ['ascend', 'descend']\n}, {\n  title: 'Фамилия',\n  dataIndex: 'surname',\n  key: 'surname',\n  sorter: (a, b) => a.surname.localeCompare(b.surname),\n  sortDirections: ['ascend', 'descend']\n}, {\n  title: 'Оценка',\n  dataIndex: 'rating',\n  key: 'rating',\n  sorter: (a, b) => a.Id - b.Id,\n  sortDirections: ['ascend', 'descend']\n}, {\n  title: 'Профессия',\n  dataIndex: 'profession',\n  key: 'profession'\n}, {\n  title: 'E-Mail',\n  dataIndex: 'email',\n  key: 'email',\n  sorter: (a, b) => a.email.localeCompare(b.email),\n  sortDirections: ['ascend', 'descend']\n}];\n\nfunction ExpertTable({\n  data\n}) {\n  if (data === '') data = [];\n  data = data.filter(record => record.role === 'expert');\n  data.forEach((record, k) => {\n    record.Id = k + 1;\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Table, {\n    locale: {\n      emptyText: 'Нет данных'\n    },\n    className: \"clearfix\",\n    columns: columns,\n    dataSource: data,\n    rowKey: \"Id\",\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ExpertTable;","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/components/panel/Lists/Tables/ExpertTable.js"],"names":["React","Table","Link","columns","title","dataIndex","key","sorter","a","b","Id","sortDirections","defaultSortOrder","render","text","record","_id","name","localeCompare","surname","email","ExpertTable","data","filter","role","forEach","k","emptyText","clear"],"mappings":"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","sourcesContent":["import React from 'react';\n\nimport { Table } from 'antd';\nimport { Link } from 'react-router-dom';\n\nconst columns = [\n  {\n    title: 'ID',\n    dataIndex: 'Id',\n    key: 'Id',\n    sorter: (a, b) => a.Id - b.Id,\n    sortDirections: ['ascend', 'descend'],\n    defaultSortOrder: 'ascend'\n  },\n\n  {\n    title: 'Имя',\n    dataIndex: 'name',\n    key: 'name',\n    render: (text, record) => <Link to={`/expert/${record._id}`}>{text}</Link>,\n    sorter: (a, b) => a.name.localeCompare(b.name),\n    sortDirections: ['ascend', 'descend']\n  },\n\n  {\n    title: 'Фамилия',\n    dataIndex: 'surname',\n    key: 'surname',\n    sorter: (a, b) => a.surname.localeCompare(b.surname),\n    sortDirections: ['ascend', 'descend']\n  },\n\n  {\n    title: 'Оценка',\n    dataIndex: 'rating',\n    key: 'rating',\n    sorter: (a, b) => a.Id - b.Id,\n    sortDirections: ['ascend', 'descend']\n  },\n\n  {\n    title: 'Профессия',\n    dataIndex: 'profession',\n    key: 'profession'\n  },\n\n  {\n    title: 'E-Mail',\n    dataIndex: 'email',\n    key: 'email',\n    sorter: (a, b) => a.email.localeCompare(b.email),\n    sortDirections: ['ascend', 'descend']\n  }\n];\n\nfunction ExpertTable({ data }) {\n  if (data === '') data = [];\n  data = data.filter((record) => record.role === 'expert');\n  data.forEach((record, k) => {\n    record.Id = k + 1;\n  });\n  return (\n    <>\n      <Table\n        locale={{ emptyText: 'Нет данных' }}\n        className=\"clearfix\"\n        columns={columns}\n        dataSource={data}\n        rowKey=\"Id\"\n        style={{ clear: 'both' }}\n      />\n    </>\n  );\n}\n\nexport default ExpertTable;\n"]},"metadata":{},"sourceType":"module"}