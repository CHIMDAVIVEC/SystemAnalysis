{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\components\\\\panel\\\\ProblemPOVS\\\\AnalystPOV.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Descriptions, Form, Button, Collapse, Space, Input, Popconfirm, Progress, Badge } from 'antd';\nimport { ProblemContext } from '../../../context/problem/problemContext';\nimport { UserContext } from '../../../context/user/userContext';\nimport Loader from '../../Loader/Loader';\nimport HOC from '../HOC';\nconst {\n  Panel\n} = Collapse;\nconst {\n  TextArea\n} = Input;\n\nfunction AnalystPOV(props) {\n  const {\n    state,\n    fetchSingleProblem,\n    deleteProblem\n  } = useContext(ProblemContext);\n  const id = props.match.params.id;\n  useEffect(() => {\n    async function fetchData() {\n      await fetchSingleProblem(id);\n    }\n\n    fetchData();\n  }, [fetchSingleProblem, id]);\n  const {\n    users\n  } = useContext(UserContext).state;\n  const experts = Object.values(users).filter(user => user.role === 'expert');\n  const {\n    problem\n  } = state;\n\n  const onConfirmDelete = () => {\n    deleteProblem(id).then(() => window.location.replace('/problems'));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, problem ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Popconfirm, {\n    title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n    onConfirm: onConfirmDelete,\n    okText: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\",\n    cancelText: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"float-right\",\n    danger: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u043F\\u0440\\u043E\\u0431\\u043B\\u0435\\u043C\\u0443\")), /*#__PURE__*/React.createElement(Form, {\n    name: \"problem_details_form\",\n    className: \"login-form\",\n    layout: \"vertical\",\n    size: \"large\",\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions, {\n    title: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043F\\u0440\\u043E\\u0431\\u043B\\u0435\\u043C\\u044B\",\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    autoSize: {\n      minRows: 1,\n      maxRows: 10\n    },\n    cols: 50,\n    defaultValue: problem.name,\n    disabled: true,\n    style: {\n      background: 'white',\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    status: problem.status === 'Открыта' ? 'default' : problem.status === 'Решается' ? 'processing' : 'success',\n    text: problem.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), '  ', /*#__PURE__*/React.createElement(Progress, {\n    width: 40,\n    type: \"circle\",\n    percent: problem.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), ' '), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"\\u0424\\u043E\\u0440\\u043C\\u0443\\u043B\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    autoSize: {\n      minRows: 1,\n      maxRows: 10\n    },\n    cols: 50,\n    defaultValue: problem.formulation,\n    disabled: true,\n    style: {\n      background: 'white',\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  })), problem.status !== 'Открыта' && /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"\\u0420\\u0435\\u0448\\u0435\\u043D\\u0438\\u0435\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/problem/result/${problem._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u0440\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442\\u0443\")))), /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"\\u0410\\u043B\\u044C\\u0442\\u0435\\u0440\\u043D\\u0430\\u0442\\u0438\\u0432\\u044B\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 17\n    }\n  }, problem.alternatives.map((alternative, k) => /*#__PURE__*/React.createElement(\"p\", {\n    key: k,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, '№' + (k + 1), \" \", alternative.formulation)))), /*#__PURE__*/React.createElement(Collapse, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"\\u042D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\\u044B\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }, experts.filter(expert => problem.experts.map(exs => exs.id).includes(expert._id)).map((expert, i) => /*#__PURE__*/React.createElement(Link, {\n    key: i,\n    to: `/expert/${expert._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    key: i,\n    value: expert._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, '№' + (i + 1), \" \", expert.name, \" \", expert.surname, \" \", ': ', ' ', expert.rating)))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center align-items-center\",\n    style: {\n      marginTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"align-self-center text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, problem.status === 'Открыта' && /*#__PURE__*/React.createElement(Button, {\n    type: \"info\",\n    className: \"login-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/problem/${problem._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 23\n    }\n  }, \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\")), /*#__PURE__*/React.createElement(Button, {\n    type: \"info\",\n    className: \"login-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/problems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"\\u041E\\u0431\\u0440\\u0430\\u0442\\u043D\\u043E\"))))))) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default HOC(AnalystPOV);","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/components/panel/ProblemPOVS/AnalystPOV.js"],"names":["React","useContext","useEffect","Link","Descriptions","Form","Button","Collapse","Space","Input","Popconfirm","Progress","Badge","ProblemContext","UserContext","Loader","HOC","Panel","TextArea","AnalystPOV","props","state","fetchSingleProblem","deleteProblem","id","match","params","fetchData","users","experts","Object","values","filter","user","role","problem","onConfirmDelete","then","window","location","replace","clear","minRows","maxRows","name","background","color","status","progress","formulation","_id","alternatives","map","alternative","k","expert","exs","includes","i","surname","rating","marginTop"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Descriptions,\r\n  Form,\r\n  Button,\r\n  Collapse,\r\n  Space,\r\n  Input,\r\n  Popconfirm,\r\n  Progress,\r\n  Badge\r\n} from 'antd';\r\nimport { ProblemContext } from '../../../context/problem/problemContext';\r\nimport { UserContext } from '../../../context/user/userContext';\r\nimport Loader from '../../Loader/Loader';\r\nimport HOC from '../HOC';\r\n\r\nconst { Panel } = Collapse;\r\nconst { TextArea } = Input;\r\n\r\nfunction AnalystPOV(props) {\r\n  const { state, fetchSingleProblem, deleteProblem } =\r\n    useContext(ProblemContext);\r\n\r\n  const id = props.match.params.id;\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await fetchSingleProblem(id);\r\n    }\r\n    fetchData();\r\n  }, [fetchSingleProblem, id]);\r\n\r\n  const { users } = useContext(UserContext).state;\r\n  const experts = Object.values(users).filter((user) => user.role === 'expert');\r\n  const { problem } = state;\r\n\r\n  const onConfirmDelete = () => {\r\n    deleteProblem(id).then(() => window.location.replace('/problems'));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {problem ? (\r\n        <>\r\n          <Popconfirm\r\n            title=\"Вы уверены?\"\r\n            onConfirm={onConfirmDelete}\r\n            okText=\"Удалить\"\r\n            cancelText=\"Закрыть\"\r\n          >\r\n            <Button className=\"float-right\" danger>\r\n              Удалить проблему\r\n            </Button>\r\n          </Popconfirm>\r\n          <Form\r\n            name=\"problem_details_form\"\r\n            className=\"login-form\"\r\n            layout=\"vertical\"\r\n            size=\"large\"\r\n            style={{ clear: 'both' }}\r\n          >\r\n            <Descriptions title=\"Статус проблемы\" layout=\"vertical\">\r\n              <Descriptions.Item label=\"Название\" span={2}>\r\n                <TextArea\r\n                  autoSize={{ minRows: 1, maxRows: 10 }}\r\n                  cols={50}\r\n                  defaultValue={problem.name}\r\n                  disabled={true}\r\n                  style={{ background: 'white', color: 'black' }}\r\n                />\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"Статус\">\r\n                <Badge\r\n                  status={\r\n                    problem.status === 'Открыта'\r\n                      ? 'default'\r\n                      : problem.status === 'Решается'\r\n                      ? 'processing'\r\n                      : 'success'\r\n                  }\r\n                  text={problem.status}\r\n                />\r\n                {'  '}\r\n                <Progress\r\n                  width={40}\r\n                  type=\"circle\"\r\n                  percent={problem.progress}\r\n                />{' '}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"Формулировка\" span={2}>\r\n                <TextArea\r\n                  autoSize={{ minRows: 1, maxRows: 10 }}\r\n                  cols={50}\r\n                  defaultValue={problem.formulation}\r\n                  disabled={true}\r\n                  style={{ background: 'white', color: 'black' }}\r\n                />\r\n              </Descriptions.Item>\r\n              {problem.status !== 'Открыта' && (\r\n                <Descriptions.Item label=\"Решение\">\r\n                  <Button type=\"primary\" className=\"mr-2\">\r\n                    <Link to={`/problem/result/${problem._id}`}>\r\n                      Перейти к результату\r\n                    </Link>\r\n                  </Button>\r\n                </Descriptions.Item>\r\n              )}\r\n            </Descriptions>\r\n\r\n            <Space direction=\"vertical\">\r\n              <Collapse>\r\n                <Panel header=\"Альтернативы\" key=\"1\">\r\n                  {problem.alternatives.map((alternative, k) => (\r\n                    <p key={k}>\r\n                      {'№' + (k + 1)} {alternative.formulation}\r\n                    </p>\r\n                  ))}\r\n                </Panel>\r\n              </Collapse>\r\n              <Collapse>\r\n                <Panel header=\"Эксперты\" key=\"1\">\r\n                  {experts\r\n                    .filter((expert) =>\r\n                      problem.experts.map((exs) => exs.id).includes(expert._id)\r\n                    )\r\n                    .map((expert, i) => (\r\n                      <Link key={i} to={`/expert/${expert._id}`}>\r\n                        <p key={i} value={expert._id}>\r\n                          {'№' + (i + 1)} {expert.name} {expert.surname} {': '}{' '}\r\n                          {expert.rating}\r\n                        </p>\r\n                      </Link>\r\n                    ))}\r\n                </Panel>\r\n              </Collapse>\r\n            </Space>\r\n            <div\r\n              className=\"row justify-content-center align-items-center\"\r\n              style={{ marginTop: '5%' }}\r\n            >\r\n              <div className=\"align-self-center text-center\">\r\n                <Space direction=\"horizontal\">\r\n                  {problem.status === 'Открыта' && (\r\n                    <Button type=\"info\" className=\"login-form-button\">\r\n                      <Link to={`/problem/${problem._id}`}>Редактировать</Link>\r\n                    </Button>\r\n                  )}\r\n                  <Button type=\"info\" className=\"login-form-button\">\r\n                    <Link to=\"/problems\">Обратно</Link>\r\n                  </Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HOC(AnalystPOV);\r\n"]},"metadata":{},"sourceType":"module"}