{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\components\\\\panel\\\\ProblemPOVS\\\\ExpertPOV.js\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Descriptions, Form, Button, Collapse, Space, Input, Radio, Badge, Progress, Popconfirm } from 'antd';\nimport { ProblemContext } from '../../../context/problem/problemContext';\nimport Loader from '../../Loader/Loader';\nimport HOC from '../HOC';\nconst {\n  Panel\n} = Collapse;\nconst {\n  TextArea\n} = Input;\n\nfunction ExpertPOV(props) {\n  const {\n    state,\n    editProblem,\n    fetchSingleProblem\n  } = useContext(ProblemContext);\n  const {\n    problem\n  } = state;\n  const id = props.match.params.id;\n  const [method, setMethod] = useState(0);\n  useEffect(() => {\n    async function fetchData() {\n      await fetchSingleProblem(id);\n    }\n\n    fetchData();\n  }, [fetchSingleProblem, id]);\n\n  const onClick = () => {\n    var values = problem;\n\n    if (values.status === 'Открыта') {\n      const temp = {\n        experts: [],\n        alternatives: []\n      };\n      problem.experts.forEach(item => {\n        temp.experts.push(item.id);\n      });\n      console.log(problem);\n      problem.alternatives.forEach(item => {\n        temp.alternatives.push(item.formulation);\n      });\n      values.alternatives = temp.alternatives;\n      values.experts = temp.experts;\n      values.status = 'Решается';\n      editProblem(values);\n    }\n  };\n\n  function isUnsolved(meth) {\n    return problem.alternatives.map(alt => eval(`alt.result.method${meth}`)).includes(null);\n  }\n\n  function handleChange(value) {\n    setMethod(value);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, problem ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n    name: \"problem_details_form\",\n    className: \"login-form\",\n    layout: \"vertical\",\n    size: \"large\",\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions, {\n    title: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441 \\u043F\\u0440\\u043E\\u0431\\u043B\\u0435\\u043C\\u044B\",\n    layout: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    autoSize: {\n      minRows: 1,\n      maxRows: 10\n    },\n    cols: 50,\n    defaultValue: problem.name,\n    disabled: true,\n    style: {\n      background: 'white',\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    status: problem.status === 'Открыта' ? 'default' : problem.status === 'Решается' ? 'processing' : 'success',\n    text: problem.status,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), '  ', /*#__PURE__*/React.createElement(Progress, {\n    width: 40,\n    type: \"circle\",\n    percent: problem.progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }), ' '), /*#__PURE__*/React.createElement(Descriptions.Item, {\n    span: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 19\n    }\n  }, \"\\u0424\\u043E\\u0440\\u043C\\u0443\\u043B\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430:\"), /*#__PURE__*/React.createElement(TextArea, {\n    autoSize: {\n      minRows: 1,\n      maxRows: 10\n    },\n    cols: 50,\n    defaultValue: problem.formulation,\n    disabled: true,\n    style: {\n      background: 'white',\n      color: 'black'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 19\n    }\n  }))), problem.status !== 'Решена' && /*#__PURE__*/React.createElement(Descriptions.Item, {\n    label: \"\\u041C\\u0435\\u0442\\u043E\\u0434 \\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u044F\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Radio.Group, {\n    name: \"method\",\n    defaultValue: method,\n    onChange: data => handleChange(data.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 23\n    }\n  }, isUnsolved(1) && /*#__PURE__*/React.createElement(Radio, {\n    value: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }\n  }, \"\\u041F\\u0430\\u0440\\u043D\\u044B\\u0445 \\u0441\\u0440\\u0430\\u0432\\u043D\\u0435\\u043D\\u0438\\u0439\"), isUnsolved(2) && /*#__PURE__*/React.createElement(Radio, {\n    value: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 27\n    }\n  }, \"\\u0412\\u0437\\u0432\\u0435\\u0448\\u0435\\u043D\\u043D\\u044B\\u0445 \\u044D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\\u043D\\u044B\\u0445 \\u043E\\u0446\\u0435\\u043D\\u043E\\u043A\"), isUnsolved(4) && /*#__PURE__*/React.createElement(Radio, {\n    value: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 43\n    }\n  }, \"\\u041F\\u0440\\u0435\\u0434\\u043F\\u043E\\u0447\\u0442\\u0435\\u043D\\u0438\\u044F\"), isUnsolved(5) && /*#__PURE__*/React.createElement(Radio, {\n    value: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 43\n    }\n  }, \"\\u0420\\u0430\\u043D\\u0433\\u0430\"), isUnsolved(6) && /*#__PURE__*/React.createElement(Radio, {\n    value: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 27\n    }\n  }, \"\\u041F\\u043E\\u043B\\u043D\\u043E\\u0433\\u043E \\u043F\\u043E\\u043F\\u0430\\u0440\\u043D\\u043E\\u0433\\u043E \\u0441\\u043E\\u043F\\u043E\\u0441\\u0442\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\"))), problem.status === 'Открыта' ? /*#__PURE__*/React.createElement(Popconfirm, {\n    title: \"Это сменит статус на 'Решается'. Вы уверены?\",\n    onConfirm: () => {\n      onClick();\n      window.location.replace(`/problem/solving/${problem._id}/${method}`);\n    },\n    okText: \"\\u0414\\u0430\",\n    cancelText: \"\\u041D\\u0435\\u0442\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    className: \"mr-2\",\n    disabled: method !== 0 ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u044E\")) : /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    className: \"mr-2\",\n    onClick: onClick,\n    disabled: method !== 0 ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/problem/solving/${problem._id}/${method}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 25\n    }\n  }, \"\\u041F\\u0435\\u0440\\u0435\\u0439\\u0442\\u0438 \\u043A \\u0440\\u0435\\u0448\\u0435\\u043D\\u0438\\u044E\"))))), /*#__PURE__*/React.createElement(Space, {\n    direction: \"vertical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Collapse, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Panel, {\n    header: \"\\u0410\\u043B\\u044C\\u0442\\u0435\\u0440\\u043D\\u0430\\u0442\\u0438\\u0432\\u044B\",\n    key: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 17\n    }\n  }, problem.alternatives.map((alternative, k) => /*#__PURE__*/React.createElement(\"p\", {\n    key: k,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, '№' + (k + 1), \" \", alternative.formulation))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center align-items-center\",\n    style: {\n      marginTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"align-self-center text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Space, {\n    direction: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"info\",\n    className: \"login-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/problems\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, \"\\u041E\\u0431\\u0440\\u0430\\u0442\\u043D\\u043E\"))))))) : /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default HOC(ExpertPOV);","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/components/panel/ProblemPOVS/ExpertPOV.js"],"names":["React","useContext","useEffect","useState","Link","Descriptions","Form","Button","Collapse","Space","Input","Radio","Badge","Progress","Popconfirm","ProblemContext","Loader","HOC","Panel","TextArea","ExpertPOV","props","state","editProblem","fetchSingleProblem","problem","id","match","params","method","setMethod","fetchData","onClick","values","status","temp","experts","alternatives","forEach","item","push","console","log","formulation","isUnsolved","meth","map","alt","eval","includes","handleChange","value","clear","minRows","maxRows","name","background","color","progress","data","target","window","location","replace","_id","alternative","k","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SACEC,YADF,EAEEC,IAFF,EAGEC,MAHF,EAIEC,QAJF,EAKEC,KALF,EAMEC,KANF,EAOEC,KAPF,EAQEC,KARF,EASEC,QATF,EAUEC,UAVF,QAWO,MAXP;AAYA,SAASC,cAAT,QAA+B,yCAA/B;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYV,QAAlB;AACA,MAAM;AAAEW,EAAAA;AAAF,IAAeT,KAArB;;AAEA,SAASU,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,WAAT;AAAsBC,IAAAA;AAAtB,MAA6CvB,UAAU,CAACc,cAAD,CAA7D;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcH,KAApB;AACA,QAAMI,EAAE,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,CAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAe6B,SAAf,GAA2B;AACzB,YAAMP,kBAAkB,CAACE,EAAD,CAAxB;AACD;;AACDK,IAAAA,SAAS;AACV,GALQ,EAKN,CAACP,kBAAD,EAAqBE,EAArB,CALM,CAAT;;AAOA,QAAMM,OAAO,GAAG,MAAM;AACpB,QAAIC,MAAM,GAAGR,OAAb;;AACA,QAAIQ,MAAM,CAACC,MAAP,KAAkB,SAAtB,EAAiC;AAC/B,YAAMC,IAAI,GAAG;AAAEC,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,YAAY,EAAE;AAA7B,OAAb;AAEAZ,MAAAA,OAAO,CAACW,OAAR,CAAgBE,OAAhB,CAAyBC,IAAD,IAAU;AAChCJ,QAAAA,IAAI,CAACC,OAAL,CAAaI,IAAb,CAAkBD,IAAI,CAACb,EAAvB;AACD,OAFD;AAGAe,MAAAA,OAAO,CAACC,GAAR,CAAYjB,OAAZ;AACAA,MAAAA,OAAO,CAACY,YAAR,CAAqBC,OAArB,CAA8BC,IAAD,IAAU;AACrCJ,QAAAA,IAAI,CAACE,YAAL,CAAkBG,IAAlB,CAAuBD,IAAI,CAACI,WAA5B;AACD,OAFD;AAIAV,MAAAA,MAAM,CAACI,YAAP,GAAsBF,IAAI,CAACE,YAA3B;AACAJ,MAAAA,MAAM,CAACG,OAAP,GAAiBD,IAAI,CAACC,OAAtB;AACAH,MAAAA,MAAM,CAACC,MAAP,GAAgB,UAAhB;AACAX,MAAAA,WAAW,CAACU,MAAD,CAAX;AACD;AACF,GAlBD;;AAoBA,WAASW,UAAT,CAAoBC,IAApB,EAA0B;AACxB,WAAOpB,OAAO,CAACY,YAAR,CACJS,GADI,CACCC,GAAD,IAASC,IAAI,CAAE,oBAAmBH,IAAK,EAA1B,CADb,EAEJI,QAFI,CAEK,IAFL,CAAP;AAGD;;AAED,WAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BrB,IAAAA,SAAS,CAACqB,KAAD,CAAT;AACD;;AAED,sBACE,0CACG1B,OAAO,gBACN,uDACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAC,sBADP;AAEE,IAAA,SAAS,EAAC,YAFZ;AAGE,IAAA,MAAM,EAAC,UAHT;AAIE,IAAA,IAAI,EAAC,OAJP;AAKE,IAAA,KAAK,EAAE;AAAE2B,MAAAA,KAAK,EAAE;AAAT,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAC,uFAApB;AAAsC,IAAA,MAAM,EAAC,UAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD,CAAc,IAAd;AAAmB,IAAA,KAAK,EAAC,kDAAzB;AAAoC,IAAA,IAAI,EAAE,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,OAAO,EAAE;AAAvB,KADZ;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,YAAY,EAAE7B,OAAO,CAAC8B,IAHxB;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,KAAK,EAAE;AAAEC,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAUE,oBAAC,YAAD,CAAc,IAAd;AAAmB,IAAA,KAAK,EAAC,sCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,MAAM,EACJhC,OAAO,CAACS,MAAR,KAAmB,SAAnB,GACI,SADJ,GAEIT,OAAO,CAACS,MAAR,KAAmB,UAAnB,GACA,YADA,GAEA,SANR;AAQE,IAAA,IAAI,EAAET,OAAO,CAACS,MARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAWG,IAXH,eAYE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAE,EADT;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,OAAO,EAAET,OAAO,CAACiC,QAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAgBK,GAhBL,CAVF,eA4BE,oBAAC,YAAD,CAAc,IAAd;AAAmB,IAAA,IAAI,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFADF,eAEE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAE;AAAEL,MAAAA,OAAO,EAAE,CAAX;AAAcC,MAAAA,OAAO,EAAE;AAAvB,KADZ;AAEE,IAAA,IAAI,EAAE,EAFR;AAGE,IAAA,YAAY,EAAE7B,OAAO,CAACkB,WAHxB;AAIE,IAAA,QAAQ,EAAE,IAJZ;AAKE,IAAA,KAAK,EAAE;AAAEa,MAAAA,UAAU,EAAE,OAAd;AAAuBC,MAAAA,KAAK,EAAE;AAA9B,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CA5BF,EAwCGhC,OAAO,CAACS,MAAR,KAAmB,QAAnB,iBACC,oBAAC,YAAD,CAAc,IAAd;AAAmB,IAAA,KAAK,EAAC,2EAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,YAAY,EAAEL,MAFhB;AAGE,IAAA,QAAQ,EAAG8B,IAAD,IAAUT,YAAY,CAACS,IAAI,CAACC,MAAL,CAAYT,KAAb,CAHlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,UAAU,CAAC,CAAD,CAAV,iBACC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mGAFJ,EAIGA,UAAU,CAAC,CAAD,CAAV,iBACC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sKALJ,EAOGA,UAAU,CAAC,CAAD,CAAV,iBAAiB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gFAPpB,EAQGA,UAAU,CAAC,CAAD,CAAV,iBAAiB,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCARpB,EASGA,UAAU,CAAC,CAAD,CAAV,iBACC,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wLAVJ,CALF,CADF,EAsBGnB,OAAO,CAACS,MAAR,KAAmB,SAAnB,gBACC,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE,8CADT;AAEE,IAAA,SAAS,EAAE,MAAM;AACfF,MAAAA,OAAO;AACP6B,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CACG,oBAAmBtC,OAAO,CAACuC,GAAI,IAAGnC,MAAO,EAD5C;AAGD,KAPH;AAQE,IAAA,MAAM,EAAC,cART;AASE,IAAA,UAAU,EAAC,oBATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAWE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,QAAQ,EAAEA,MAAM,KAAK,CAAX,GAAe,KAAf,GAAuB,IAHnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGAXF,CADD,gBAqBC,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,SADP;AAEE,IAAA,SAAS,EAAC,MAFZ;AAGE,IAAA,OAAO,EAAEG,OAHX;AAIE,IAAA,QAAQ,EAAEH,MAAM,KAAK,CAAX,GAAe,KAAf,GAAuB,IAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,oBAAmBJ,OAAO,CAACuC,GAAI,IAAGnC,MAAO,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oGANF,CA3CJ,CADF,CAzCJ,CAPF,eA2GE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAC,0EAAd;AAA6B,IAAA,GAAG,EAAC,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,OAAO,CAACY,YAAR,CAAqBS,GAArB,CAAyB,CAACmB,WAAD,EAAcC,CAAd,kBACxB;AAAG,IAAA,GAAG,EAAEA,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,OAAOA,CAAC,GAAG,CAAX,CADH,OACmBD,WAAW,CAACtB,WAD/B,CADD,CADH,CADF,CADF,CA3GF,eAsHE;AACE,IAAA,SAAS,EAAC,+CADZ;AAEE,IAAA,KAAK,EAAE;AAAEwB,MAAAA,SAAS,EAAE;AAAb,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,SAAS,EAAC,mBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADF,CADF,CADF,CAJF,CAtHF,CADF,CADM,gBAuIN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxIJ,CADF;AA6ID;;AAED,eAAelD,GAAG,CAACG,SAAD,CAAlB","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n  Descriptions,\r\n  Form,\r\n  Button,\r\n  Collapse,\r\n  Space,\r\n  Input,\r\n  Radio,\r\n  Badge,\r\n  Progress,\r\n  Popconfirm\r\n} from 'antd';\r\nimport { ProblemContext } from '../../../context/problem/problemContext';\r\nimport Loader from '../../Loader/Loader';\r\nimport HOC from '../HOC';\r\n\r\nconst { Panel } = Collapse;\r\nconst { TextArea } = Input;\r\n\r\nfunction ExpertPOV(props) {\r\n  const { state, editProblem, fetchSingleProblem } = useContext(ProblemContext);\r\n  const { problem } = state;\r\n  const id = props.match.params.id;\r\n  const [method, setMethod] = useState(0);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      await fetchSingleProblem(id);\r\n    }\r\n    fetchData();\r\n  }, [fetchSingleProblem, id]);\r\n\r\n  const onClick = () => {\r\n    var values = problem;\r\n    if (values.status === 'Открыта') {\r\n      const temp = { experts: [], alternatives: [] };\r\n\r\n      problem.experts.forEach((item) => {\r\n        temp.experts.push(item.id);\r\n      });\r\n      console.log(problem);\r\n      problem.alternatives.forEach((item) => {\r\n        temp.alternatives.push(item.formulation);\r\n      });\r\n\r\n      values.alternatives = temp.alternatives;\r\n      values.experts = temp.experts;\r\n      values.status = 'Решается';\r\n      editProblem(values);\r\n    }\r\n  };\r\n\r\n  function isUnsolved(meth) {\r\n    return problem.alternatives\r\n      .map((alt) => eval(`alt.result.method${meth}`))\r\n      .includes(null);\r\n  }\r\n\r\n  function handleChange(value) {\r\n    setMethod(value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {problem ? (\r\n        <>\r\n          <Form\r\n            name=\"problem_details_form\"\r\n            className=\"login-form\"\r\n            layout=\"vertical\"\r\n            size=\"large\"\r\n            style={{ clear: 'both' }}\r\n          >\r\n            <Descriptions title=\"Статус проблемы\" layout=\"vertical\">\r\n              <Descriptions.Item label=\"Название\" span={2}>\r\n                <TextArea\r\n                  autoSize={{ minRows: 1, maxRows: 10 }}\r\n                  cols={50}\r\n                  defaultValue={problem.name}\r\n                  disabled={true}\r\n                  style={{ background: 'white', color: 'black' }}\r\n                />\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"Статус\">\r\n                <Badge\r\n                  status={\r\n                    problem.status === 'Открыта'\r\n                      ? 'default'\r\n                      : problem.status === 'Решается'\r\n                      ? 'processing'\r\n                      : 'success'\r\n                  }\r\n                  text={problem.status}\r\n                />\r\n                {'  '}\r\n                <Progress\r\n                  width={40}\r\n                  type=\"circle\"\r\n                  percent={problem.progress}\r\n                />{' '}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item span={2}>\r\n                <Space direction=\"vertical\">\r\n                  <label>Формулировка:</label>\r\n                  <TextArea\r\n                    autoSize={{ minRows: 1, maxRows: 10 }}\r\n                    cols={50}\r\n                    defaultValue={problem.formulation}\r\n                    disabled={true}\r\n                    style={{ background: 'white', color: 'black' }}\r\n                  />\r\n                </Space>\r\n              </Descriptions.Item>\r\n              {problem.status !== 'Решена' && (\r\n                <Descriptions.Item label=\"Метод решения\">\r\n                  <Space direction=\"vertical\">\r\n                    <Radio.Group\r\n                      name=\"method\"\r\n                      defaultValue={method}\r\n                      onChange={(data) => handleChange(data.target.value)}\r\n                    >\r\n                      <Space direction=\"vertical\">\r\n                        {isUnsolved(1) && (\r\n                          <Radio value={1}>Парных сравнений</Radio>\r\n                        )}\r\n                        {isUnsolved(2) && (\r\n                          <Radio value={2}>Взвешенных экспертных оценок</Radio>\r\n                        )}\r\n                        {isUnsolved(4) && <Radio value={3}>Предпочтения</Radio>}\r\n                        {isUnsolved(5) && <Radio value={4}>Ранга</Radio>}\r\n                        {isUnsolved(6) && (\r\n                          <Radio value={5}>\r\n                            Полного попарного сопоставления\r\n                          </Radio>\r\n                        )}\r\n                      </Space>\r\n                    </Radio.Group>\r\n                    {problem.status === 'Открыта' ? (\r\n                      <Popconfirm\r\n                        title={\"Это сменит статус на 'Решается'. Вы уверены?\"}\r\n                        onConfirm={() => {\r\n                          onClick();\r\n                          window.location.replace(\r\n                            `/problem/solving/${problem._id}/${method}`\r\n                          );\r\n                        }}\r\n                        okText=\"Да\"\r\n                        cancelText=\"Нет\"\r\n                      >\r\n                        <Button\r\n                          type=\"primary\"\r\n                          className=\"mr-2\"\r\n                          disabled={method !== 0 ? false : true}\r\n                        >\r\n                          Перейти к решению\r\n                        </Button>\r\n                      </Popconfirm>\r\n                    ) : (\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"mr-2\"\r\n                        onClick={onClick}\r\n                        disabled={method !== 0 ? false : true}\r\n                      >\r\n                        <Link to={`/problem/solving/${problem._id}/${method}`}>\r\n                          Перейти к решению\r\n                        </Link>\r\n                      </Button>\r\n                    )}\r\n                  </Space>\r\n                </Descriptions.Item>\r\n              )}\r\n            </Descriptions>\r\n            <Space direction=\"vertical\">\r\n              <Collapse>\r\n                <Panel header=\"Альтернативы\" key=\"1\">\r\n                  {problem.alternatives.map((alternative, k) => (\r\n                    <p key={k}>\r\n                      {'№' + (k + 1)} {alternative.formulation}\r\n                    </p>\r\n                  ))}\r\n                </Panel>\r\n              </Collapse>\r\n            </Space>\r\n            <div\r\n              className=\"row justify-content-center align-items-center\"\r\n              style={{ marginTop: '5%' }}\r\n            >\r\n              <div className=\"align-self-center text-center\">\r\n                <Space direction=\"horizontal\">\r\n                  <Button type=\"info\" className=\"login-form-button\">\r\n                    <Link to=\"/problems\">Обратно</Link>\r\n                  </Button>\r\n                </Space>\r\n              </div>\r\n            </div>\r\n          </Form>\r\n        </>\r\n      ) : (\r\n        <Loader />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HOC(ExpertPOV);\r\n"]},"metadata":{},"sourceType":"module"}