{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\components\\\\panel\\\\Forms\\\\ProblemForm.js\";\nimport React from 'react';\nimport { Row, Col } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { Form, Input, Button, Select } from 'antd';\nimport { FontColorsOutlined, InfoOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport ProblemFormStyled from '../../styles/ProblemFormStyled';\nconst {\n  TextArea\n} = Input;\nconst {\n  Option\n} = Select;\n\nfunction ProblemForm({\n  problem,\n  experts,\n  onFinish,\n  loading\n}) {\n  const handleChange = event => {\n    const userId = event.target.value;\n    const user = experts.find(u => u.id === userId);\n    this.setState({\n      value: user\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(ProblemFormStyled, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    name: \"problem_details_form\",\n    className: \"login-form\",\n    initialValues: problem ? {\n      name: problem.name,\n      formulation: problem.formulation,\n      alternatives: problem.alternatives.map(alternative => alternative.formulation),\n      experts: problem.experts.map(expert => expert.id)\n    } : {\n      name: null,\n      formulation: null,\n      alternatives: [null, null],\n      experts: [null]\n    },\n    onFinish: onFinish,\n    layout: \"vertical\",\n    size: \"large\",\n    style: {\n      clear: 'both'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: [32, 32],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"name\",\n    label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    rules: [{\n      required: true,\n      message: 'Введите название!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    prefix: /*#__PURE__*/React.createElement(FontColorsOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }),\n    placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    name: \"formulation\",\n    label: \"\\u0424\\u043E\\u0440\\u043C\\u0443\\u043B\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n    rules: [{\n      required: true,\n      message: 'Введите формулировку проблемы!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    autoSize: true,\n    prefix: /*#__PURE__*/React.createElement(InfoOutlined, {\n      className: \"site-form-item-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }),\n    placeholder: \"\\u0424\\u043E\\u0440\\u043C\\u0443\\u043B\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    gutter: {\n      xs: 8,\n      sm: 16,\n      md: 24,\n      lg: 32\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.List, {\n    name: \"alternatives\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, fields.map((field, index) => /*#__PURE__*/React.createElement(Form.Item, {\n    required: false,\n    key: field.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, field, {\n    validateTrigger: ['onChange', 'onBlur'],\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: 'Введите альтернативу или удалите поле!'\n    }],\n    noStyle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(TextArea, {\n    autoSize: true,\n    placeholder: index + 1 + ': Альтернатива',\n    style: {\n      width: '90%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 25\n    }\n  })), fields.length > 2 ? /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n    className: \"dynamic-delete-button\",\n    onClick: () => remove(field.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }) : null)), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"dashed\",\n    onClick: () => add(),\n    icon: /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u043B\\u044C\\u0442\\u0435\\u0440\\u043D\\u0430\\u0442\\u0438\\u0432\\u0443\"))))), /*#__PURE__*/React.createElement(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.List, {\n    name: \"experts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => /*#__PURE__*/React.createElement(React.Fragment, null, fields.map((field, index) => /*#__PURE__*/React.createElement(Form.Item, {\n    required: false,\n    key: field.key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, Object.assign({}, field, {\n    validateTrigger: ['onChange', 'onBlur'],\n    rules: [{\n      required: true,\n      whitespace: true,\n      message: 'Выберите эксперта или удалите поле!'\n    }],\n    noStyle: true,\n    id: \"user\",\n    componentClass: \"select\",\n    onChange: handleChange.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    showSearch: true,\n    placeholder: index + 1 + ': Эксперт',\n    style: {\n      width: '90%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, experts.map((expert, i) => /*#__PURE__*/React.createElement(Option, {\n    key: i,\n    value: expert._id,\n    disabled: !expert.rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/expert/${expert._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 33\n    }\n  }, expert.name, \" \", expert.surname, \" \", ': ', ' ', expert.rating))))), fields.length > 1 ? /*#__PURE__*/React.createElement(MinusCircleOutlined, {\n    className: \"dynamic-delete-button\",\n    onClick: () => remove(field.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }) : null)), /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"dashed\",\n    onClick: () => add(),\n    icon: /*#__PURE__*/React.createElement(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 21\n    }\n  }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u044D\\u043A\\u0441\\u043F\\u0435\\u0440\\u0442\\u0430\")))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row justify-content-center align-items-center\",\n    style: {\n      marginTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"align-self-center text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"primary\",\n    loading: loading,\n    htmlType: \"submit\",\n    className: \"mr-2\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, problem ? 'Сохранить' : 'Создать'), /*#__PURE__*/React.createElement(Button, {\n    type: \"info\",\n    className: \"login-form-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: problem ? `/analyst/problem/${problem._id}` : '/problems',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, \"\\u041E\\u0431\\u0440\\u0430\\u0442\\u043D\\u043E\")))))));\n}\n\nexport default ProblemForm;","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/components/panel/Forms/ProblemForm.js"],"names":["React","Row","Col","Link","Form","Input","Button","Select","FontColorsOutlined","InfoOutlined","MinusCircleOutlined","PlusOutlined","ProblemFormStyled","TextArea","Option","ProblemForm","problem","experts","onFinish","loading","handleChange","event","userId","target","value","user","find","u","id","setState","name","formulation","alternatives","map","alternative","expert","clear","required","message","xs","sm","md","lg","fields","add","remove","field","index","key","whitespace","width","length","bind","i","_id","rating","surname","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { Form, Input, Button, Select } from 'antd';\nimport {\n  FontColorsOutlined,\n  InfoOutlined,\n  MinusCircleOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\nimport ProblemFormStyled from '../../styles/ProblemFormStyled';\n\nconst { TextArea } = Input;\nconst { Option } = Select;\n\nfunction ProblemForm({ problem, experts, onFinish, loading }) {\n  const handleChange = (event) => {\n    const userId = event.target.value;\n    const user = experts.find((u) => u.id === userId);\n    this.setState({\n      value: user\n    });\n  };\n\n  return (\n    <ProblemFormStyled>\n      <Form\n        name=\"problem_details_form\"\n        className=\"login-form\"\n        initialValues={\n          problem\n            ? {\n                name: problem.name,\n                formulation: problem.formulation,\n                alternatives: problem.alternatives.map(\n                  (alternative) => alternative.formulation\n                ),\n                experts: problem.experts.map((expert) => expert.id)\n              }\n            : {\n                name: null,\n                formulation: null,\n                alternatives: [null, null],\n                experts: [null]\n              }\n        }\n        onFinish={onFinish}\n        layout=\"vertical\"\n        size=\"large\"\n        style={{ clear: 'both' }}\n      >\n        <Row gutter={[32, 32]}>\n          <Col span={12}>\n            <Form.Item\n              name=\"name\"\n              label=\"Название\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Введите название!'\n                }\n              ]}\n            >\n              <Input\n                prefix={<FontColorsOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Название\"\n              />\n            </Form.Item>\n          </Col>\n\n          <Col span={12}>\n            <Form.Item\n              name=\"formulation\"\n              label=\"Формулировка\"\n              rules={[\n                {\n                  required: true,\n                  message: 'Введите формулировку проблемы!'\n                }\n              ]}\n            >\n              <TextArea\n                autoSize\n                prefix={<InfoOutlined className=\"site-form-item-icon\" />}\n                placeholder=\"Формулировка\"\n              />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n          <Col span={12}>\n            <Form.List name=\"alternatives\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map((field, index) => (\n                    <Form.Item required={false} key={field.key}>\n                      <Form.Item\n                        {...field}\n                        validateTrigger={['onChange', 'onBlur']}\n                        rules={[\n                          {\n                            required: true,\n                            whitespace: true,\n                            message: 'Введите альтернативу или удалите поле!'\n                          }\n                        ]}\n                        noStyle\n                      >\n                        <TextArea\n                          autoSize\n                          placeholder={index + 1 + ': Альтернатива'}\n                          style={{ width: '90%' }}\n                        />\n                      </Form.Item>\n                      {fields.length > 2 ? (\n                        <MinusCircleOutlined\n                          className=\"dynamic-delete-button\"\n                          onClick={() => remove(field.name)}\n                        />\n                      ) : null}\n                    </Form.Item>\n                  ))}\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      icon={<PlusOutlined />}\n                    >\n                      Добавить альтернативу\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </Col>\n\n          <Col span={12}>\n            <Form.List name=\"experts\">\n              {(fields, { add, remove }) => (\n                <>\n                  {fields.map((field, index) => (\n                    <Form.Item required={false} key={field.key}>\n                      <Form.Item\n                        {...field}\n                        validateTrigger={['onChange', 'onBlur']}\n                        rules={[\n                          {\n                            required: true,\n                            whitespace: true,\n                            message: 'Выберите эксперта или удалите поле!'\n                          }\n                        ]}\n                        noStyle\n                        id=\"user\"\n                        componentClass=\"select\"\n                        onChange={handleChange.bind(this)}\n                      >\n                        <Select\n                          showSearch\n                          placeholder={index + 1 + ': Эксперт'}\n                          style={{ width: '90%' }}\n                        >\n                          {experts.map((expert, i) => (\n                              <Option\n                                key={i}\n                                value={expert._id}\n                                disabled={!expert.rating}\n                              >\n                                <Link to={`/expert/${expert._id}`}>\n                                  {expert.name} {expert.surname} {': '}{' '}\n                                  {expert.rating}\n                                </Link>\n                              </Option>\n                          ))}\n                        </Select>\n                      </Form.Item>\n                      {fields.length > 1 ? (\n                        <MinusCircleOutlined\n                          className=\"dynamic-delete-button\"\n                          onClick={() => remove(field.name)}\n                        />\n                      ) : null}\n                    </Form.Item>\n                  ))}\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => add()}\n                      icon={<PlusOutlined />}\n                    >\n                      Добавить эксперта\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form.List>\n          </Col>\n        </Row>\n        <div\n          className=\"row justify-content-center align-items-center\"\n          style={{ marginTop: '5%' }}\n        >\n          <div className=\"align-self-center text-center\">\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                loading={loading}\n                htmlType=\"submit\"\n                className=\"mr-2\"\n                disabled={loading}\n              >\n                {problem ? 'Сохранить' : 'Создать'}\n              </Button>\n              <Button type=\"info\" className=\"login-form-button\">\n                <Link\n                  to={problem ? `/analyst/problem/${problem._id}` : '/problems'}\n                >\n                  Обратно\n                </Link>\n              </Button>\n            </Form.Item>\n          </div>\n        </div>\n      </Form>\n    </ProblemFormStyled>\n  );\n}\n\nexport default ProblemForm;\n"]},"metadata":{},"sourceType":"module"}