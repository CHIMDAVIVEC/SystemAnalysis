{"ast":null,"code":"var _jsxFileName = \"D:\\\\BABOGA\\\\SYSAN\\\\client\\\\src\\\\context\\\\auth\\\\AuthContext.js\";\nimport React, { createContext, useReducer, useCallback } from 'react';\nimport userReducer from './AuthReducer';\nimport axios from 'axios';\nimport * as types from './authActionTypes';\nconst initialAuthState = {\n  loading: false,\n  error: false,\n  token: null,\n  errResponse: null\n};\nexport const AuthContext = createContext(initialAuthState);\nexport const AuthProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(userReducer, initialAuthState);\n\n  const AuthReset = () => {\n    dispatch({\n      type: types.AUTH_RESET\n    });\n  };\n\n  const LoginAction = useCallback(async data => {\n    dispatch({\n      type: types.AUTH_START\n    });\n\n    try {\n      const res = await axios.post('/api/auth/login', data);\n      localStorage.setItem('howard_shores', res.data.access_token);\n      dispatch({\n        type: types.AUTH_SUCCESS,\n        payload: res.data.access_token\n      });\n    } catch (error) {\n      dispatch({\n        type: types.AUTH_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: {\n      state,\n      AuthReset,\n      LoginAction\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"sources":["D:/BABOGA/SYSAN/client/src/context/auth/AuthContext.js"],"names":["React","createContext","useReducer","useCallback","userReducer","axios","types","initialAuthState","loading","error","token","errResponse","AuthContext","AuthProvider","children","state","dispatch","AuthReset","type","AUTH_RESET","LoginAction","data","AUTH_START","res","post","localStorage","setItem","access_token","AUTH_SUCCESS","payload","AUTH_FAILURE","response","error_msg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,WAA3C,QAA8D,OAA9D;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,mBAAvB;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,OAAO,EAAE,KADc;AAEvBC,EAAAA,KAAK,EAAE,KAFgB;AAGvBC,EAAAA,KAAK,EAAE,IAHgB;AAIvBC,EAAAA,WAAW,EAAE;AAJU,CAAzB;AAOA,OAAO,MAAMC,WAAW,GAAGX,aAAa,CAACM,gBAAD,CAAjC;AAEP,OAAO,MAAMM,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,UAAU,CAACE,WAAD,EAAcG,gBAAd,CAApC;;AAEA,QAAMU,SAAS,GAAG,MAAM;AACtBD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEZ,KAAK,CAACa;AADL,KAAD,CAAR;AAGD,GAJD;;AAMA,QAAMC,WAAW,GAAGjB,WAAW,CAAC,MAAOkB,IAAP,IAAgB;AAC9CL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEZ,KAAK,CAACgB;AADL,KAAD,CAAR;;AAGA,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMlB,KAAK,CAACmB,IAAN,CAAW,iBAAX,EAA8BH,IAA9B,CAAlB;AACAI,MAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCH,GAAG,CAACF,IAAJ,CAASM,YAA/C;AACAX,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEZ,KAAK,CAACsB,YADL;AAEPC,QAAAA,OAAO,EAAEN,GAAG,CAACF,IAAJ,CAASM;AAFX,OAAD,CAAR;AAID,KAPD,CAOE,OAAOlB,KAAP,EAAc;AACdO,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEZ,KAAK,CAACwB,YADL;AAEPD,QAAAA,OAAO,EAAEpB,KAAK,CAACsB,QAAN,CAAeV,IAAf,CAAoBW;AAFtB,OAAD,CAAR;AAID;AACF,GAjB8B,EAiB5B,EAjB4B,CAA/B;AAmBA,sBACE,oBAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLjB,MAAAA,KADK;AAELE,MAAAA,SAFK;AAGLG,MAAAA;AAHK,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGN,QAPH,CADF;AAWD,CAvCM","sourcesContent":["import React, { createContext, useReducer, useCallback } from 'react';\nimport userReducer from './AuthReducer';\nimport axios from 'axios';\nimport * as types from './authActionTypes';\n\nconst initialAuthState = {\n  loading: false,\n  error: false,\n  token: null,\n  errResponse: null\n};\n\nexport const AuthContext = createContext(initialAuthState);\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(userReducer, initialAuthState);\n\n  const AuthReset = () => {\n    dispatch({\n      type: types.AUTH_RESET\n    });\n  };\n\n  const LoginAction = useCallback(async (data) => {\n    dispatch({\n      type: types.AUTH_START\n    });\n    try {\n      const res = await axios.post('/api/auth/login', data);\n      localStorage.setItem('howard_shores', res.data.access_token);\n      dispatch({\n        type: types.AUTH_SUCCESS,\n        payload: res.data.access_token\n      });\n    } catch (error) {\n      dispatch({\n        type: types.AUTH_FAILURE,\n        payload: error.response.data.error_msg\n      });\n    }\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        state,\n        AuthReset,\n        LoginAction\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}